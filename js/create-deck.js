(()=>{"use strict";var e={430:(e,t,s)=>{s.d(t,{$:()=>i,s:()=>d});class a{value;next;constructor(e){this.value=e}}class n{#e;#t;#s;constructor(){this.clear()}enqueue(e){const t=new a(e);this.#e?(this.#t.next=t,this.#t=t):(this.#e=t,this.#t=t),this.#s++}dequeue(){const e=this.#e;if(e)return this.#e=this.#e.next,this.#s--,e.value}clear(){this.#e=void 0,this.#t=void 0,this.#s=0}get size(){return this.#s}*[Symbol.iterator](){let e=this.#e;for(;e;)yield e.value,e=e.next}}const l={0:144e5,1:144e5,2:288e5,3:864e5,4:1728e5,5:6048e5,6:12096e5,7:2592e6,8:5184e6};function r(e){for(var t=1;t<arguments.length;t++)if(void 0===arguments[t])throw new TypeError("Failed to execute '"+e+"'. Missing argument(s).")}class i{constructor(e=null,t=null,s=null){if(this.name=e,this.description=t,this.cards=[],null!=s)for(let e=0;e<s.length;++e){let t=s[e],a=t.getElementsByClassName("question")[0].value,n=t.getElementsByClassName("answer")[0].value.trim();""!==a&&""!==n&&this.cards.push({q:a,ans:n,nextReview:0,stage:0})}}set name(e){this._name=""===e?"Unnamed Deck":e}get name(){return this._name}review(){return new c(this.cards)}static unserialise(e){r("unserialise",e);let t=new i;return Object.assign(t,JSON.parse(e)),t}serialise(){return this.reviews=[],JSON.stringify(this)}updateToLocalStorage(e){r("updateToLocalStorage",e);let t=window.localStorage.getItem("user-decks"),s=t?JSON.parse(t):[];console.assert(e>=0&&e<s.length,"Deck index out of range"),s[e]=this.serialise(),window.localStorage.setItem("user-decks",JSON.stringify(s))}static getFromLocalStorage(e){r("getFromLocalStorage",e);let t=localStorage.getItem("user-decks"),s=t?JSON.parse(t):[];return console.assert(e>=0&&e<s.length,"Deck index out of range"),i.unserialise(s[e])}static addToLocalStorage(e){r("addToLocalStorage",e);let t=window.localStorage.getItem("user-decks");t=t?JSON.parse(t):[],t.push(e.serialise()),window.localStorage.setItem("user-decks",JSON.stringify(t))}static removeFromLocalStorage(e){r("removeFromLocalStorage",e);let t=window.localStorage.getItem("user-decks");t=t?JSON.parse(t):[],t.splice(e,1),window.localStorage.setItem("user-decks",JSON.stringify(t))}getHTMLForm(){return new d(this)}}class d{constructor(e=null){this.deck=e,this.htmlTag=document.createElement("div"),this.htmlTag.innerHTML='<div class="row">\n\t\t\t<div class="column-left">\n\t\t\t\t<label for="deck-name">Deck Name</label>\n\t\t\t\t<input type="text" id="deck-name" class="deck-name" maxlength=100>\n\t\t\t\t<label for="deck-description">Description</label>\n\t\t\t\t<textarea id="deck-description" class="deck-description" maxlength=1500></textarea>\n\t\t\t</div>\n\t\t\t\x3c!-- <div class="column-right">\n\t\t\t\t<label for="deck-icon-btn">Icon</label><br>\n\t\t\t\t<button id="deck-icon-btn" onclick="document.getElementById(\'deck-icon\').click();">\n\t\t\t\t\t[Not Implemented] Choose an image\n\t\t\t\t</button>\n\t\t\t\t<input id="deck-icon" type="file" accept="image/*" style="display: none;" />\n\t\t\t</div> --\x3e\n\t\t</div>\n\t\t<div class="center">\n\t\t\t<div class="flashcard" data-id="1">\n\t\t\t\t<label class="name">Card 1</label>\n\t\t\t\t<button class="fa fa-close close-btn" tabindex="-1"></button>\n\t\t\t\t<textarea rows="4" class="question" placeholder="Question"></textarea>\n\t\t\t\t<textarea rows="4" class="answer" placeholder="Answer"></textarea>\n\t\t\t</div>\n\t\t</div>',this._updateLastCard()}_requireDeckRef(){console.assert(null!=this.deck,"Error, DeckHTMLForm was not given a Deck class to reference.")}fillFormData(){this._requireDeckRef();let e=this.htmlTag.getElementsByClassName("deck-name")[0],t=this.htmlTag.getElementsByClassName("deck-description")[0];e.value=this.deck.name,t.value=this.deck.description,this._fillCards();let s=this.htmlTag.getElementsByClassName("flashcard");for(let e=0;e<this.deck.cards.length;++e){let t=this.deck.cards[e];s[e].getElementsByClassName("question")[0].value=t.q,s[e].getElementsByClassName("answer")[0].value=t.ans}}enableAutoCardInsertion(){this._updateLastCard();let e=this.htmlTag.getElementsByClassName("flashcard");for(let t of e)this._addCardListeners(t)}generateDeck(){let e=this.htmlTag.getElementsByClassName("deck-name")[0].value,t=this.htmlTag.getElementsByClassName("deck-description")[0].value,s=this.htmlTag.getElementsByClassName("flashcard");return new i(e,t,s)}updateDeck(){this._requireDeckRef();let e=this.htmlTag.getElementsByClassName("deck-name")[0].value,t=this.htmlTag.getElementsByClassName("deck-description")[0].value,s=this.htmlTag.getElementsByClassName("flashcard");this.deck.name=e,this.deckDescription=t,this.cards=s}_fillCards(){this._requireDeckRef();let e=this.htmlTag.getElementsByClassName("flashcard");for(;e.length<this.deck.cards.length;)this._addCard()}_addCardListeners(e){let t=e.getElementsByClassName("close-btn")[0],s=e.getElementsByClassName("question")[0],a=e.getElementsByClassName("answer")[0],n=this;t.addEventListener("click",(function(e){n._deleteCardCallback(e)})),a.addEventListener("input",(function(e){n._addCardCallback(e)})),s.addEventListener("input",(function(e){n._addCardCallback(e)}))}_updateLastCard(){let e=this.htmlTag.getElementsByClassName("flashcard");this.lastCard=e[e.length-1]}_addCardCallback(e){e.path[1]===this.lastCard&&this._addCard()}_addCard(){let e=this.lastCard.cloneNode(!0),t=Number(this.lastCard.getAttribute("data-id"))+1;e.setAttribute("data-id",t),e.getElementsByTagName("label")[0].innerHTML="Card "+t;for(let t of e.getElementsByTagName("textarea"))t.value="";this._addCardListeners(e),this.lastCard.insertAdjacentElement("afterend",e),this.lastCard=e}_deleteCardCallback(e){let t=e.path[1],s=this.htmlTag.getElementsByClassName("flashcard");if(1!=s.length)if(t===this.lastCard)this.lastCard=t.previousElementSibling,t.remove();else{let e=Number(t.getAttribute("data-id"))-1;for(t.remove();e<s.length;++e){let t=s[e];t.setAttribute("data-id",e+1),t.getElementsByTagName("label")[0].innerHTML="Card "+(e+1)}}}}class c{constructor(e){r("ReviewSession constructor",e),this.reviewQueue=new n,this.summary={correct:[],wrong:[]},this.cards=e,this.current=null;let t=Date.now();for(let e=0;e<this.cards.length;++e){let s=this.cards[e];t>s.nextReview&&s.stage<=8&&this.reviewQueue.enqueue({card:this.cards[e],numWrong:0})}this.reviewQueue.size>0&&(this.current=this.reviewQueue.dequeue())}nextCard(){return null===this.current?null:this.current.card}logAns(e){if(r("logAns",e),this.done)return;let t=Date.now(),s=this.current.card,a=!1;if(e.trim()===s.ans)if(a=!0,this.current.numWrong>0){let e=s.stage>=5?2:1,t=s.stage-Math.ceil(this.current.numWrong/2*e);s.stage=t>0?t:1,this.summary.wrong.push(s)}else s.stage+=1,this.summary.correct.push(s);else this.reviewQueue.enqueue({card:s,numWrong:this.current.numWrong+1});return s.nextReview=function(e){let t=36e5;return Math.floor(e/t)*t}(t+l[s.stage]),0===this.reviewQueue.size?this.current=null:this.current=this.reviewQueue.dequeue(),a}}},444:(e,t,s)=>{let a=!1;function n(){if(!1===a){document.getElementsByClassName("topnav")[0].style.width="118px";let e=document.getElementById("hamburger");e.classList.remove("fa-bars"),e.classList.add("fa-close"),a=!0}else{document.getElementsByClassName("topnav")[0].style.width="0";let e=document.getElementById("hamburger");e.classList.add("fa-bars"),e.classList.remove("fa-close"),a=!1}}window.addEventListener("load",(function(){document.getElementById("hamburger").addEventListener("click",n)}))}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var l=t[a]={exports:{}};return e[a](l,l.exports,s),l.exports}s.d=(e,t)=>{for(var a in t)s.o(t,a)&&!s.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{s(444);var e=s(430);let t=null;function a(){let s=t.generateDeck();e.$.addToLocalStorage(s),window.location.href="index.html"}window.onload=function(){t=new e.s;let s=document.getElementsByClassName("center-content")[0];t.enableAutoCardInsertion(),s.appendChild(t.htmlTag),s.insertAdjacentHTML("beforeend",'<input id="submitDeck" type="submit" value="Create Deck">'),document.getElementById("submitDeck").addEventListener("click",a)}})()})();